spring:

  profiles:
    active: dev

  main:
    allow-circular-references: true
    allow-bean-definition-overriding: true

  datasource:
    primary:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3306/demo?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useServerPrepStmts=true&cachePrepStmts=true&useSSL=false
      username: "root"
      password: "000000"
      type: com.alibaba.druid.pool.DruidDataSource
      druid:
        clear-filters-enable: true
        max-active: 20
        initial-size: 1
        max-wait: 60000
        min-idle: 1
        time-between-eviction-runs-millis: 60000
        min-evictable-idle-time-millis: 300000
        validation-query: select 'x'
        test-while-idle: true
        test-on-borrow: true
        test-on-return: false
        pool-prepared-statements: true
        max-open-prepared-statements: 20
        filters: stat
    quartz:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3306/quartz?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
      username: "root"
      password: "000000"
      type: com.zaxxer.hikari.HikariDataSource
      hikari:
        minimum-idle: 5
        idle-timeout: 150000
        maximum-pool-size: 10
        connection-timeout: 30000
        connection-test-query: SELECT 1
        max-lifetime: 0

  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        ddl-auto: update
      show-sql: true

  redis:
    key:
      prefix:
        authCode: "portal:authCode:"
      expire:
        authCode: 120 # 验证码超期时间

    host: 127.0.0.1
    port: 7008
    password: 123456
    jedis:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 0
        max-wait: 2000ms
    timeout: 3000ms

  cache:
    type: redis
    redis:
      time-to-live: 2m
      key-prefix: true

  rabbitmq:
    addresses: localhost
    port: 5672
    connection-timeout: 10s

  servlet:
    multipart:
      max-file-size: 128KB
      max-request-size: 128KB

  quartz:
    job-store-type: jdbc
    jdbc:
      comment-prefix: qrtz_
      initialize-schema: never
      schema: classpath:quartz/table_quartz.sql
      #文件的注释跟脚本一起[springboot解析后的结果]，执行不了
      #-- Dumping database structure for quartz DROP DATABASE IF EXISTS `quartz`
      #尝试了几种方案，ScriptUtils都解析错误，没办法了
    properties.org.quartz:
        scheduler:
          #instanceName设置是没啥用的~ SpringBoot貌似已经写死了BeanName作为名字了~
          #只能写代码实现了~
          instanceName: SpringBoot
          instanceId: AUTO
        jobStore:
          #class: org.quartz.impl.jdbcjobstore.JobStoreTX
          #spring-boot-starter-quartz 高版本使用方式变化, 使用默认的DB数据源
          driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
          tablePrefix: qrtz_
          isClustered: true
          dataSource: quartzDataSource
          clusterCheckinInterval: 10000
          useProperties: true
        threadPool:
          class: org.quartz.simpl.SimpleThreadPool
          threadCount: 10
          threadPriority: 5
          threadsInheritContextClassLoaderOfInitializingThread: true
  mail:
    host: smtp.exmail.qq.com
    port: 25
    protocol: smtp
    default-encoding: UTF-8
    username: chenjingjun@aobi.com
    password: oDZ6AhkaL4apgCMm
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
        debug: true

  thymeleaf:
    prefix: classpath:/thymeleaf/
    suffix: .html
    mode: HTML
    encoding: UTF-8
    cache: false

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

# 引入了spring-boot-starter-security 需要账号密码登录
  security:
    user:
      name: "admin"
      password: "000000"

server:
  port: 8088
  tomcat:
    basedir: E:/demo/springboot/

logging:
  level: {root: info}
  file:
    path: E:/demo/springboot/logs


## 该配置节点为独立的节点，有很多同学容易将这个配置放在spring的节点下，导致配置无法被识别
mybatis:
  mapper-locations: classpath:mapper/*.xml #注意：一定要对应mapper映射xml文件的所在路径
  type-aliases-package: com.ximuyi.demo.mybatis.model # 注意：对应实体类的路径

pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql


# 自定义jwt key
jwt:
  tokenHeader: Authorization #JWT存储的请求头
  secret: mySecret #JWT加解密使用的密钥
  expiration: 604800 #JWT的超期限时间(60*60*24)
  tokenHead: Bearer  #JWT负载中拿到开头

jim:
  name: Jim
  age: 12
  number:  ${random.int}
  uuid : ${random.uuid}
  max: ${random.int(10)}
  value: ${random.value}
  greeting: hi,i'm  ${jim.name}

storage:
  location: E:\demo\springboot\out\production\resources\storage

